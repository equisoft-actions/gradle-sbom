name: Produce and upload a Gradle SBOM.
description: Scan Gradle dependencies and uploads them using Github Submission API.

inputs:
  gradle-properties:
    description: Content of a gradle.properties file that will be passed to the gradle runner.
    required: false
  gradle-build-module:
    description: Modules for which to resolve dependencies. One per line. E.g. `:app`. Defaults to root `:`.
    required: true
    default: ":"
  gradle-build-configuration:
    description: The configuration used to retrieve dependencies from. `runtimeClasspath` is usually recommended. Defaults to everything.
    required: false
  working-directory:
    description: Relative path under $GITHUB_WORKSPACE where the root project is located.
    required: false
    default: "."

runs:
  using: composite
  steps:
    - name: Action context
      id: context
      shell: python
      env:
        MODULES: ${{ inputs.gradle-build-module }}
      run: |
        import os
        modules = '_'.join(os.environ['MODULES'].splitlines())
        with open(os.environ['GITHUB_OUTPUT'], 'a') as fh:
          print(f'correlator=gradle-{modules}', file=fh)

    - name: Configure gradle properties
      shell: bash
      run: |-
        cat <<EOT >> ${{ inputs.working-directory }}/gradle.properties
        ${{ inputs.gradle-properties }}
        EOT

    - name: Generate SBOM
      uses: mikepenz/gradle-dependency-submission@v0.9.1
      with:
        correlator: ${{ steps.context.outputs.correlator }}
        gradle-project-path: ${{ inputs.working-directory }}
        gradle-build-module: ${{ inputs.gradle-build-module }}
        gradle-build-configuration: ${{ inputs.gradle-build-configuration }}
        include-build-environment: "false"
        sub-module-mode: IGNORE
        use-gradlew: "true"
